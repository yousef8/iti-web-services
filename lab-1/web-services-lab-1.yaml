openapi: 3.0.0
info:
  title: Career Hub API
  version: 1.0.0
  description: This is a simple API for a job hunting website.
servers:
  - url: http://localhost:8000/api
    description: Local server

paths:
  /users:
    get:
      summary: Get all users
      security:
        - bearerAuth: []
        - basicAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Get user by id
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}/posts:
    get:
      summary: Get user's posts
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create new post for a specific user
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /posts/{postId}:
    delete:
      summary: Delete post
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted
    patch:
      summary: Update post partially
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        userId:
          type: string
      required:
        - title
        - content
        - userId
    PostUpdate:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        userId:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
